# /etc/package.conf - configuração global do gerenciador `package`
# ---------------------------------------------------------------
# Salve este arquivo em /etc/package.conf e reinicie/abra o CLI `package`.
# Comentários/documentação inline. Valores padrão pensados para um sistema Linux.

#########################
# Diretórios e caminhos
#########################
PORTSDIR=/usr/ports                 # árvore de ports (categoria/port/Makefile)
MODULEDIR=/opt/package/modules      # pasta com módulos .sh
CACHE_DIR=/var/cache/package        # cache genérico
DISTDIR=${CACHE_DIR}/distfiles      # onde ficam distfiles baixados
WORKDIR=${CACHE_DIR}/work           # checkouts git / diretório de build temporário
LOG_DIR=${LOG_DIR:-/var/log/package}
DEP_LOG_DIR=${DEP_LOG_DIR:-$LOG_DIR/deps}
BUILD_LOG_DIR=${BUILD_LOG_DIR:-$LOG_DIR/builds}
PATCH_LOG_DIR=${PATCH_LOG_DIR:-$LOG_DIR/patches}
HOOK_LOG_DIR=${HOOK_LOG_DIR:-$LOG_DIR/hooks}

INSTALLED_DB=${INSTALLED_DB:-/var/lib/package/installed}  # metadados dos pacotes
STATE_DIR=${STATE_DIR:-/var/lib/package/state}            # estado, caches, índices
mkdir -p "$CACHE_DIR" "$DISTDIR" "$WORKDIR" "$LOG_DIR" "$INSTALLED_DB" "$STATE_DIR" 2>/dev/null || true

#########################
# Usuário / permissões
#########################
PREFIX=${PREFIX:-/usr/local}         # prefixo de instalação
BUILD_USER=${BUILD_USER:-packagebuilder}  # usuário opcional para builds
ALLOW_UNPRIVILEGED_BUILDS=yes       # se "no", exige sudo/root para builds
FAKEROOT_TOOL=${FAKEROOT_TOOL:-tar} # ferramenta usada no fakeroot install (tar|fakeroot|fakechroot)
SYSTEMD=yes                         # integrar com systemd (enable/disable services)

#########################
# Ferramentas / tempo
#########################
MAKEFLAGS=${MAKEFLAGS:-"-j$(nproc)"}    # flags padrão do make
FETCH_TIMEOUT=${FETCH_TIMEOUT:-60}      # timeout em segundos para downloads
FETCH_RETRIES=${FETCH_RETRIES:-3}       # tentativas de download
GIT_TIMEOUT=${GIT_TIMEOUT:-30}          # timeout para git ls-remote etc
MAX_PARALLEL_FETCHES=${MAX_PARALLEL_FETCHES:-4}
PARALLEL_JOBS=${PARALLEL_JOBS:-1}       # paralelismo para builds/deps
USER_AGENT=${USER_AGENT:-"package/cli (fetch)"}  # user-agent para curl/wget
UMASK=${UMASK:-0022}                    # umask para operações de instalação

#########################
# Fetch / Verificação
#########################
VERIFY_CHECKSUMS=yes          # verificar SHA256 (se presente distinfo)
DISTINFO_FILE=distinfo        # nome do arquivo de checksums em cada port
RETRY_BACKOFF=2               # backoff (s) entre tentativas
DOWNLOAD_CONTINUE=yes         # suporta resume (-c) no wget/curl
GIT_SHALLOW=yes               # clonar com --depth (para speed)
GIT_DEPTH=1

#########################
# Sandbox / ambiente de build
#########################
SANDBOX_METHOD=${SANDBOX_METHOD:-none} # none|chroot|bubblewrap|docker
SANDBOX_BASE=${SANDBOX_BASE:-/var/tmp/package-sandbox} # base para sandboxes
RETAIN_BUILD_DIR=no           # preservar diretório de build para depuração (yes|no)
CLEAN_WORKDIR_AFTER_BUILD=yes # limpar workdir ao final

#########################
# Patch / Hooks / Build
#########################
APPLY_PATCHES=yes             # aplicar patches se existirem
HOOKS_RUN_MAKEFILE=yes        # executar targets pre/post no Makefile
HOOKS_SCRIPT_DIR=hooks        # pasta interna do port para scripts (se aplicável)
BUILD_CMD=${BUILD_CMD:-make}  # comando de build (pode ser "make" ou wrapper)
MAKE_CHECK_CMD=${MAKE_CHECK_CMD:-"make check"} # comando para testes
INSTALL_CMD=${INSTALL_CMD:-make DESTDIR=\$DESTDIR install} # comando de instalação

#########################
# Dependency behavior
#########################
AUTOINSTALL_DEPS=yes          # instalar dependências automaticamente (yes|no)
DEPENDENCY_DRYRUN=no          # se yes, deps apenas listados
DEPENDENCY_NO_UPGRADE=no      # padrão: permite upgrades automáticos (yes|no)
DEPENDENCY_PARALLEL=${PARALLEL_JOBS}  # número de jobs para deps

#########################
# Upgrade / Update
#########################
AUTO_UPGRADE_NO=yes           # se yes, o sistema não atualiza automaticamente pacotes
NOTIFY_ON_UPDATE=yes          # notificar via notify-send se atualização encontrada
UPDATE_REPORT=${LOG_DIR}/update-report.json  # arquivo JSON com updates detectados
UPDATE_METHOD_FALLBACK=auto   # auto|http|git|svn (auto detect)
UPDATE_REGEX_DEFAULT='[0-9]+\.[0-9]+(\.[0-9]+)?'  # regex default

#########################
# CLI / UX
#########################
COLOR_OUTPUT=yes              # colorir saída (yes|no)
TTY_DETECT=yes                # detectar TTY para cores
ALIAS_MAP="f:fetch b:build i:install r:remove u:upgrade d:deps upd:update full:full"  # abreviações
VERBOSE=no
DRY_RUN=no

#########################
# Logs / Retenção
#########################
LOG_ROTATE_DAYS=30
RETAIN_DISTFILES_DAYS=90      # tempo de retenção de distfiles no cache
AUTO_CLEAN_DISTFILES=no       # se yes, remove distfiles após sucesso

#########################
# systemd / service management
#########################
SERVICE_ENABLE=${SERVICE_ENABLE:-yes}  # enable services after install?
SERVICE_AUTO_RESTART=no                # restart services after upgrade?

#########################
# Misc / Segurança
#########################
ALLOW_NETWORK_FETCH=yes       # permite fetchs pela rede (toggle central)
CHECK_GPG_SIGNATURE=no        # se yes, tenta verificar assinaturas (requer chaves)
GPG_KEYRING=/etc/package/trustedkeys.gpg

#########################
# Integration toggles (module-specific flags)
#########################
ENABLE_FETCH=yes
ENABLE_BUILD=yes
ENABLE_DEPS=yes
ENABLE_PATCH=yes
ENABLE_HOOKS=yes
ENABLE_SANDBOX=yes
ENABLE_FAKEROOT=yes
ENABLE_REGISTER=yes
ENABLE_UPGRADE=yes
ENABLE_UPDATE=yes
ENABLE_SYNC=yes
ENABLE_LOGS=yes

#########################
# Advanced / Experimental
#########################
PARALLEL_INSTALL_LEVELS=yes     # habilita instalar níveis de deps em paralelo
UNWIND_ON_FAIL=yes              # tenta "rollback" em caso de falha no upgrade
MAX_RETRY_UPGRADE=1
ARCHIVE_INSTALLED_FILES=yes     # gravar lista de arquivos instalados por pacote
FILES_LIST_NAME=package.files   # nome do arquivo que lista os arquivos instalados

#########################
# Color definitions (can be overridden)
#########################
COLOR_INFO='\033[32m'
COLOR_WARN='\033[33m'
COLOR_ERROR='\033[31m'
COLOR_RESET='\033[0m'

#########################
# Aliases / shortcuts (usado pelo bin/package)
# formato: comando:target (separados por espaço)
# Exemplo: "f:fetch b:build up:upgrade"
#########################
ALIASES="${ALIAS_MAP}"

#########################
# End of config - você pode adicionar flags específicas por port
# Exemplo por port (em Makefile):
#   UPDATE_METHOD=git
#   UPDATE_REGEX='^v?[0-9]+\.[0-9]+\.[0-9]+$'
#########################

# Carregar variáveis locais adicionais se existir (sobrepor defaults)
[ -f /etc/package.local.conf ] && source /etc/package.local.conf
